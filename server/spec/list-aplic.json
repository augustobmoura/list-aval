{
    "swagger": "2.0",
    "info": {
        "description": "This is the List Aplic API",
        "version": "v1",
        "title": "List Aplic API",
        "contact": {
            "email": "isaias_neto@discente.ufg.br"
        },
        "license": {
            "name": "API License",
            "url": "http://www.google.com"
        }
    },
    "host": "list-aplic-api.herokuapp.com",
    "basePath": "/api",
    "tags": [
        {
            "name": "classroom-controller",
            "description": "Classroom Controller"
        },
        {
            "name": "knowledge-area-controller",
            "description": "Knowledge Area Controller"
        },
        {
            "name": "list-controller",
            "description": "List Controller"
        },
        {
            "name": "login-controller",
            "description": "Login Controller"
        },
        {
            "name": "statistics-controller",
            "description": "Statistics Controller"
        },
        {
            "name": "student-controller",
            "description": "Student Controller"
        },
        {
            "name": "subject-controller",
            "description": "Subject Controller"
        }
    ],
    "paths": {
        "/classrooms": {
            "get": {
                "tags": [
                    "classroom-controller"
                ],
                "summary": "Get All Classrooms",
                "operationId": "findAllUsingGET",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Classroom"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "classroom-controller"
                ],
                "summary": "Create Classroom",
                "operationId": "saveUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "classroomDTO",
                        "description": "classroomDTO",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Classroom"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Classroom"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/classrooms/instructor": {
            "get": {
                "tags": [
                    "classroom-controller"
                ],
                "summary": "Get Classrooms by instructor id",
                "operationId": "findByInstructorIdUsingGET",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "instructorId",
                        "in": "query",
                        "description": "instructorId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Classroom"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/classrooms/student": {
            "get": {
                "tags": [
                    "classroom-controller"
                ],
                "summary": "Get Classrooms by student id",
                "operationId": "findByStudentIdUsingGET",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "studentId",
                        "in": "query",
                        "description": "studentId",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Classroom"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/classrooms/{id}": {
            "get": {
                "tags": [
                    "classroom-controller"
                ],
                "summary": "Get Classroom by id",
                "operationId": "findByIdUsingGET",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Classroom"
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "classroom-controller"
                ],
                "summary": "Update Classroom",
                "operationId": "updateUsingPUT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "classroomDTO",
                        "description": "classroomDTO",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Classroom"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Classroom"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "classroom-controller"
                ],
                "summary": "Delete Classroom by id",
                "operationId": "deleteByIdUsingDELETE",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseEntity"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/knowledge-areas": {
            "get": {
                "tags": [
                    "knowledge-area-controller"
                ],
                "summary": "Get All Knowledge Areas",
                "operationId": "findAllUsingGET_1",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AreaDoConhecimentoDTO"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/lists": {
            "get": {
                "tags": [
                    "list-controller"
                ],
                "summary": "Get lists by filter",
                "operationId": "getListsByFilterUsingGET",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "answerTime",
                        "in": "query",
                        "description": "answerTime",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "difficultyLevel",
                        "in": "query",
                        "description": "difficultyLevel",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "knowledgeAreaCode",
                        "in": "query",
                        "description": "knowledgeAreaCode",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "subjectCode",
                        "in": "query",
                        "description": "subjectCode",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "tags",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/List"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/lists/answer/{status}": {
            "post": {
                "tags": [
                    "list-controller"
                ],
                "summary": "Answering the list",
                "operationId": "answeringListUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "listDTO",
                        "description": "listDTO",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/List"
                        }
                    },
                    {
                        "name": "status",
                        "in": "path",
                        "description": "status",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "DRAFT",
                            "SAVE"
                        ]
                    },
                    {
                        "name": "studentId",
                        "in": "query",
                        "description": "studentId",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "deprecated": false
            }
        },
        "/lists/application/{id}": {
            "get": {
                "tags": [
                    "list-controller"
                ],
                "summary": "Get list application detail",
                "operationId": "getApplicationDetailByIdUsingGET",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Application"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/lists/applications/{classroomId}": {
            "get": {
                "tags": [
                    "list-controller"
                ],
                "summary": "Get applications by classroom",
                "operationId": "getApplicationsByClassroomUsingGET",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "classroomId",
                        "in": "path",
                        "description": "classroomId",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "status",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Application"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/lists/apply": {
            "post": {
                "tags": [
                    "list-controller"
                ],
                "summary": "Apply list to determinated group",
                "operationId": "applyListToGroupUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "applyDTO",
                        "description": "applyDTO",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Apply"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseEntity"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/lists/finish/{id}": {
            "post": {
                "tags": [
                    "list-controller"
                ],
                "summary": "Finish List Application by Id",
                "operationId": "finishListApplicationUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Application"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/lists/pending": {
            "get": {
                "tags": [
                    "list-controller"
                ],
                "summary": "Get pending lists by student",
                "operationId": "getPendingListsByStudentUsingGET",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "classroomId",
                        "in": "query",
                        "description": "classroomId",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "studentId",
                        "in": "query",
                        "description": "studentId",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/List"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "login-controller"
                ],
                "summary": "Login",
                "operationId": "authenticateUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "loginDTO",
                        "description": "loginDTO",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/statistics/classroom/{id}": {
            "get": {
                "tags": [
                    "statistics-controller"
                ],
                "summary": "Get classroom statistics",
                "operationId": "getClassroomStatisticsUsingGET",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Statistics"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/statistics/instructor/{id}": {
            "get": {
                "tags": [
                    "statistics-controller"
                ],
                "summary": "Get instructor statistics",
                "operationId": "getInstructorStatisticsUsingGET",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Statistics"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/students": {
            "get": {
                "tags": [
                    "student-controller"
                ],
                "summary": "Get All Students",
                "operationId": "findAllUsingGET_2",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Student"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "student-controller"
                ],
                "summary": "Create Student",
                "operationId": "saveUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "studentDTO",
                        "description": "studentDTO",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Student"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Student"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/students/enrollment": {
            "get": {
                "tags": [
                    "student-controller"
                ],
                "summary": "Get Students by Classroom",
                "operationId": "getStudentsByClassroomUsingGET",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "classroomId",
                        "in": "query",
                        "description": "classroomId",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Student"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/students/{id}": {
            "get": {
                "tags": [
                    "student-controller"
                ],
                "summary": "Get Student by id",
                "operationId": "findByIdUsingGET_1",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Student"
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "student-controller"
                ],
                "summary": "Update Student",
                "operationId": "updateUsingPUT_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "studentDTO",
                        "description": "studentDTO",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Student"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Student"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "student-controller"
                ],
                "summary": "Delete Student by id",
                "operationId": "deleteByIdUsingDELETE_1",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseEntity"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/students/{id}/enrollment": {
            "post": {
                "tags": [
                    "student-controller"
                ],
                "summary": "Enroll Student",
                "operationId": "enrollmentUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "enrollmentDTO",
                        "description": "enrollmentDTO",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Enrollment"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseEntity"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/subjects": {
            "get": {
                "tags": [
                    "subject-controller"
                ],
                "summary": "Get All Subjects",
                "operationId": "findAllUsingGET_3",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SubjectDTO"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        }
    },
    "definitions": {
        "AnswerDTO": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "string",
                    "example": "Lenda",
                    "description": "Answer"
                },
                "listId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "91b4a2dd-1797-48bb-8353-1231888129a1",
                    "description": "List identification UUID."
                },
                "questionId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "91b4a2dd-1797-48bb-8353-1231888129a1",
                    "description": "Question identification UUID."
                },
                "status": {
                    "type": "string",
                    "example": "DRAFT",
                    "description": "Answer status",
                    "enum": [
                        "DRAFT",
                        "SAVE"
                    ]
                }
            },
            "title": "AnswerDTO"
        },
        "Application": {
            "type": "object",
            "required": [
                "finalDate",
                "groupId",
                "listId",
                "startDate",
                "studentList"
            ],
            "properties": {
                "answerList": {
                    "type": "array",
                    "description": "Anwsers",
                    "items": {
                        "$ref": "#/definitions/AnswerDTO"
                    }
                },
                "applicationDateTime": {
                    "$ref": "#/definitions/Timestamp"
                },
                "finalDate": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2019-11-11 23:59:59",
                    "description": "List's final date"
                },
                "groupId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "91b4a2dd-1797-48bb-8353-1231888129a1",
                    "description": "Group identification UUID"
                },
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "91b4a2dd-1797-48bb-8353-1231888129a1",
                    "description": "Application identification UUID.",
                    "readOnly": true
                },
                "knowledgeAreas": {
                    "type": "array",
                    "description": "List's knowledge areas",
                    "items": {
                        "$ref": "#/definitions/AreaDoConhecimentoDTO"
                    }
                },
                "listId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "91b4a2dd-1797-48bb-8353-1231888129a1",
                    "description": "List identification UUID"
                },
                "name": {
                    "type": "string",
                    "example": "Quest\u00f5es sobre expressividade",
                    "description": "List's name"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2019-11-11 00:00:00",
                    "description": "List's start date"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "NAO_INICIADA",
                        "EM_ANDAMENTO",
                        "ENCERRADA"
                    ]
                },
                "studentList": {
                    "type": "array",
                    "description": "Students",
                    "items": {
                        "$ref": "#/definitions/Student"
                    }
                },
                "subjects": {
                    "type": "array",
                    "description": "List's subjects",
                    "items": {
                        "$ref": "#/definitions/DisciplinaIntegrationDTO"
                    }
                }
            },
            "title": "Application",
            "description": "Model of a application."
        },
        "Apply": {
            "type": "object",
            "required": [
                "classroomId",
                "finalDate",
                "group",
                "listId",
                "startDate"
            ],
            "properties": {
                "allClassroom": {
                    "type": "boolean",
                    "example": true,
                    "description": "All Classroom flag"
                },
                "classroomId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "91b4a2dd-1797-48bb-8353-1231888129a1",
                    "description": "Classroom's id"
                },
                "finalDate": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2019-11-11 23:59:59",
                    "description": "List's final date"
                },
                "group": {
                    "type": "string",
                    "example": "116181-b625151",
                    "description": "Group to list be applied"
                },
                "listId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "91b4a2dd-1797-48bb-8353-1231888129a1",
                    "description": "List's id"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2019-11-11 00:00:00",
                    "description": "List's start date"
                }
            },
            "title": "Apply",
            "description": "Model of a apply list."
        },
        "AreaDoConhecimentoDTO": {
            "type": "object",
            "properties": {
                "codigo": {
                    "type": "string"
                },
                "descricao": {
                    "type": "string"
                }
            },
            "title": "AreaDoConhecimentoDTO"
        },
        "Classroom": {
            "type": "object",
            "required": [
                "instructorId",
                "name",
                "subjectCode"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "example": "CWS4558",
                    "description": "Classroom identification code",
                    "readOnly": true
                },
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "91b4a2dd-1797-48bb-8353-1231888129a1",
                    "description": "Classroom identification UUID.",
                    "readOnly": true
                },
                "instructorId": {
                    "type": "string",
                    "example": "5da3453a5718e904108acc25",
                    "description": "Instructor identification id"
                },
                "name": {
                    "type": "string",
                    "example": "Integra\u00e7\u00e3o 2 2018-1",
                    "description": "Classroom's name"
                },
                "subjectCode": {
                    "type": "string",
                    "example": "INF0089",
                    "description": "Subject identification code"
                }
            },
            "title": "Classroom",
            "description": "Model of a Classroom."
        },
        "DisciplinaIntegrationDTO": {
            "type": "object",
            "properties": {
                "codigo": {
                    "type": "string"
                },
                "descricao": {
                    "type": "string"
                }
            },
            "title": "DisciplinaIntegrationDTO"
        },
        "Enrollment": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "FLA0214",
                    "description": "Classroom identification code"
                }
            },
            "title": "Enrollment",
            "description": "Model of a Enrollment."
        },
        "List": {
            "type": "object",
            "properties": {
                "answerTime": {
                    "type": "integer",
                    "format": "int32",
                    "example": 10,
                    "description": "List's answer time"
                },
                "difficultyLevel": {
                    "type": "integer",
                    "format": "int32",
                    "example": 3,
                    "description": "List's difficulty level"
                },
                "finalDate": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2019-11-11 23:59:59",
                    "description": "List's final date"
                },
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "91b4a2dd-1797-48bb-8353-1231888129a1",
                    "description": "List identification UUID."
                },
                "knowledgeAreas": {
                    "type": "array",
                    "description": "List's knowledge areas",
                    "items": {
                        "$ref": "#/definitions/AreaDoConhecimentoDTO"
                    }
                },
                "listApplicationId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "1291440f-c8ff-4d5c-baf7-5f843bf546bf",
                    "description": "List Application identification UUID."
                },
                "name": {
                    "type": "string",
                    "example": "Quest\u00f5es sobre expressividade",
                    "description": "List's name"
                },
                "questions": {
                    "type": "array",
                    "description": "List's Questions",
                    "items": {
                        "$ref": "#/definitions/Question"
                    }
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2019-11-11 00:00:00",
                    "description": "List's start date"
                },
                "status": {
                    "type": "string",
                    "example": "NAO_INICIADA",
                    "description": "List's Status",
                    "enum": [
                        "NAO_INICIADA",
                        "EM_ANDAMENTO",
                        "ENCERRADA"
                    ]
                },
                "subjects": {
                    "type": "array",
                    "description": "List's subjects",
                    "items": {
                        "$ref": "#/definitions/DisciplinaIntegrationDTO"
                    }
                },
                "tags": {
                    "type": "array",
                    "description": "List's tags",
                    "items": {
                        "type": "string"
                    }
                },
                "user": {
                    "type": "string",
                    "example": "professor@ufg.br",
                    "description": "List's user"
                }
            },
            "title": "List",
            "description": "Model of a List."
        },
        "Usuario": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "isaias_neto@discente.ufg.br",
                    "description": "Student's email"
                },
                "password": {
                    "type": "string",
                    "example": "nobodyyesdoor",
                    "description": "Student's password"
                }
            },
            "title": "Login",
            "description": "Model of a Login."
        },
        "Option": {
            "type": "object",
            "title": "Option",
            "description": "Model of a Option."
        },
        "Question": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "string",
                    "example": "Lenda",
                    "description": "Question's answer"
                },
                "expectedAnswers": {
                    "type": "array",
                    "description": "Question's expected answers",
                    "items": {
                        "$ref": "#/definitions/RespostaEsperadaInterface"
                    }
                },
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "91b4a2dd-1797-48bb-8353-1231888129a1",
                    "description": "Question identification UUID."
                },
                "name": {
                    "type": "string",
                    "example": "O que a palavra 'legend' significa em portugu\u00eas?",
                    "description": "Question's name"
                },
                "options": {
                    "type": "array",
                    "description": "Options",
                    "items": {
                        "$ref": "#/definitions/Option"
                    }
                },
                "type": {
                    "type": "string",
                    "example": "DISCURSIVE",
                    "description": "Question's type",
                    "enum": [
                        "DISCURSIVE",
                        "MULTIPLE_CHOICE",
                        "TRUE_OR_FALSE",
                        "COLUMN_BINDING"
                    ]
                }
            },
            "title": "Question",
            "description": "Model of a Question."
        },
        "QuestionCountDTO": {
            "type": "object",
            "properties": {
                "counter": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Counter of how many times the question has been applied"
                },
                "question": {
                    "description": "Question",
                    "$ref": "#/definitions/Question"
                }
            },
            "title": "QuestionCountDTO"
        },
        "ResponseEntity": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object"
                },
                "statusCode": {
                    "type": "string",
                    "enum": [
                        "100 CONTINUE",
                        "101 SWITCHING_PROTOCOLS",
                        "102 PROCESSING",
                        "103 CHECKPOINT",
                        "200 OK",
                        "201 CREATED",
                        "202 ACCEPTED",
                        "203 NON_AUTHORITATIVE_INFORMATION",
                        "204 NO_CONTENT",
                        "205 RESET_CONTENT",
                        "206 PARTIAL_CONTENT",
                        "207 MULTI_STATUS",
                        "208 ALREADY_REPORTED",
                        "226 IM_USED",
                        "300 MULTIPLE_CHOICES",
                        "301 MOVED_PERMANENTLY",
                        "302 FOUND",
                        "302 MOVED_TEMPORARILY",
                        "303 SEE_OTHER",
                        "304 NOT_MODIFIED",
                        "305 USE_PROXY",
                        "307 TEMPORARY_REDIRECT",
                        "308 PERMANENT_REDIRECT",
                        "400 BAD_REQUEST",
                        "401 UNAUTHORIZED",
                        "402 PAYMENT_REQUIRED",
                        "403 FORBIDDEN",
                        "404 NOT_FOUND",
                        "405 METHOD_NOT_ALLOWED",
                        "406 NOT_ACCEPTABLE",
                        "407 PROXY_AUTHENTICATION_REQUIRED",
                        "408 REQUEST_TIMEOUT",
                        "409 CONFLICT",
                        "410 GONE",
                        "411 LENGTH_REQUIRED",
                        "412 PRECONDITION_FAILED",
                        "413 PAYLOAD_TOO_LARGE",
                        "413 REQUEST_ENTITY_TOO_LARGE",
                        "414 URI_TOO_LONG",
                        "414 REQUEST_URI_TOO_LONG",
                        "415 UNSUPPORTED_MEDIA_TYPE",
                        "416 REQUESTED_RANGE_NOT_SATISFIABLE",
                        "417 EXPECTATION_FAILED",
                        "418 I_AM_A_TEAPOT",
                        "419 INSUFFICIENT_SPACE_ON_RESOURCE",
                        "420 METHOD_FAILURE",
                        "421 DESTINATION_LOCKED",
                        "422 UNPROCESSABLE_ENTITY",
                        "423 LOCKED",
                        "424 FAILED_DEPENDENCY",
                        "426 UPGRADE_REQUIRED",
                        "428 PRECONDITION_REQUIRED",
                        "429 TOO_MANY_REQUESTS",
                        "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
                        "451 UNAVAILABLE_FOR_LEGAL_REASONS",
                        "500 INTERNAL_SERVER_ERROR",
                        "501 NOT_IMPLEMENTED",
                        "502 BAD_GATEWAY",
                        "503 SERVICE_UNAVAILABLE",
                        "504 GATEWAY_TIMEOUT",
                        "505 HTTP_VERSION_NOT_SUPPORTED",
                        "506 VARIANT_ALSO_NEGOTIATES",
                        "507 INSUFFICIENT_STORAGE",
                        "508 LOOP_DETECTED",
                        "509 BANDWIDTH_LIMIT_EXCEEDED",
                        "510 NOT_EXTENDED",
                        "511 NETWORK_AUTHENTICATION_REQUIRED"
                    ]
                },
                "statusCodeValue": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "ResponseEntity"
        },
        "RespostaEsperadaInterface": {
            "type": "object",
            "title": "RespostaEsperadaInterface"
        },
        "Statistics": {
            "type": "object",
            "properties": {
                "completionPercentage": {
                    "type": "number",
                    "format": "float",
                    "example": 0.75,
                    "description": "Percentage of answered lists by classroom"
                },
                "errorMessage": {
                    "type": "string",
                    "description": "Error message"
                },
                "topFiveQuestions": {
                    "type": "array",
                    "description": "Instructor's 5 most applied questions",
                    "items": {
                        "$ref": "#/definitions/QuestionCountDTO"
                    }
                }
            },
            "title": "Statistics",
            "description": "Statistics model."
        },
        "Student": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "isaias_neto@discente.ufg.br",
                    "description": "Student's email"
                },
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "91b4a2dd-1797-48bb-8353-1231888129a1",
                    "description": "Student identification UUID.",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "example": "Isaias Tavares da Silva Neto",
                    "description": "Student's name"
                },
                "password": {
                    "type": "string",
                    "example": "nobodyyesdoor",
                    "description": "Student's password"
                }
            },
            "title": "Student",
            "description": "Model of a Student."
        },
        "SubjectDTO": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "title": "SubjectDTO"
        },
        "Timestamp": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "integer",
                    "format": "int32"
                },
                "day": {
                    "type": "integer",
                    "format": "int32"
                },
                "hours": {
                    "type": "integer",
                    "format": "int32"
                },
                "minutes": {
                    "type": "integer",
                    "format": "int32"
                },
                "month": {
                    "type": "integer",
                    "format": "int32"
                },
                "nanos": {
                    "type": "integer",
                    "format": "int32"
                },
                "seconds": {
                    "type": "integer",
                    "format": "int32"
                },
                "time": {
                    "type": "integer",
                    "format": "int64"
                },
                "timezoneOffset": {
                    "type": "integer",
                    "format": "int32"
                },
                "year": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "Timestamp"
        },
        "User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "isaias_neto@discente.ufg.br",
                    "description": "User's email"
                },
                "id": {
                    "type": "string",
                    "example": "91b4a2dd-1797-48bb-8353-1231888129a1",
                    "description": "User identification UUID."
                },
                "name": {
                    "type": "string",
                    "example": "Isaias Tavares da Silva Neto",
                    "description": "User's name"
                },
                "role": {
                    "type": "string",
                    "example": "DISCENTE",
                    "description": "User's role.",
                    "enum": [
                        "DISCENTE",
                        "DOCENTE"
                    ]
                }
            },
            "title": "User",
            "description": "Model of a User."
        }
    }
}
